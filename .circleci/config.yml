version: 2.1 # 2.1 を使うと Orb や他の機能を使用することができます。 

# 設定で使用する Orb を宣言します。
# Orb に関する詳細は、 https://circleci.com/docs/ja/2.0/orb-intro/ をご覧ください。
orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2
  heroku: circleci/heroku@1.2.6

jobs:
  build: #  "build"という名前の最初のジョブです。
    docker:
      - image: circleci/ruby:2.6.3-node # カスタマイズされた CircleCI Docker イメージを使用します。
    steps:
      - checkout # Git コードをプルダウンします。
      - ruby/install-deps # Ruby Orb を使って依存関係をインストールします。

  test:  # "test"という名前の２つ目のジョブです。
    # テストを高速化するために「並列ジョブコンテナ」を実行します。
    # これによりテストが複数のコンテナに分割されます。
    parallelism: 3
    # ここでは、2 つの Docker イメージを設定します。
    docker:
      - image: circleci/ruby:2.6.3-node # プライマリ Docker イメージです。ここでステップコマンドが実行されます。
      - image: cimg/postgres:14.0  #circleciをcimgに変更
        environment: # add POSTGRES environment variables.
          POSTGRES_USER: root
          POSTGRES_DB: myapp_test
          POSTGRES_PASSWORD: password
    # Ruby/Rails 固有の環境変数をプライマリコンテナに適用します。
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: root
      PGPASSWORD: password
      RAILS_ENV: test
    # 実行する一連のステップです。「ビルド」のステップと似たステップもあります。
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: rails db:migrate
          command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace  #migrateによって作られたschema.rbをload
      - run:
          name: Rspec #テストコード
          command: bundle exec rspec
# ワークフローを使って上記で宣言したジョブをオーケストレーションします。

  deploy:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - setup_remote_docker: #dockerコマンドが使えるように
          version: 20.10.14
      - heroku/install #herokuコマンドを使えるように
      - run:
          name: heroku login
          command: heroku container:login
      - run:
          name: push docker image
          command: heroku container:push web -a $HEROKU_APP_NAME
      - run:
          name: release docker image
          command: heroku container:release web -a $HEROKU_APP_NAME
      - run:
          name: database setup
          command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

workflows:
  version: 2
  build_test_and_deploy:     # ワークフローの名前は "build_test_and_deploy" です。
    jobs:             # このワークフローの一部として実行するジョブのリストです。
      - build         # まず、ビルドを実行します。

      - test:         # 次に、テストを実行します。
          requires:   # テストを実行するにはビルドを渡す必要があります。
            - build   # 最後に、ビルドしたジョブを実行します。 

      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master #branchがmasterの時のみ実行